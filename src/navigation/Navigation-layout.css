:root {
  --mobile-header-height: 60px;
  --navigation-min-width: 300px;
  --navigation-max-width: 350px;
}
#navigation-wrapper {
  min-width: var(--navigation-min-width);
}
.doc-page #navigation-wrapper {
  max-width: var(--navigation-max-width);
}
.landing-page #navigation-wrapper {
  /* prettier-ignore */
  max-width: min(var(--navigation-max-width), max(var(--navigation-min-width), calc(var(--navigation-min-width) + 100% - 1240px)));
}
#navigation-container {
  /* `position: fixed` doesn't inherit the parent's width */
  position: sticky;
  overflow-y: auto;
  overscroll-behavior: contain;
  border-right: 1px solid #eee;
  --background-color: #f0f0f0;
  padding-bottom: 70px;
}
.navigation-content {
  margin-top: 20px;
}
#navigation-content-detached {
  margin-top: 25px;
}

#navigation-mask {
  position: fixed;
  width: 100%;
  height: 100vh;
  top: 0;
  left: 0;
  z-index: 2;
}
/* `1140px` is the breaking point that preserves the width of code blocks. */
/* BEFORE EDITING THIS: also change the `1139px` value below */
@media screen and (min-width: 1140px) {
  #mobile-header {
    display: none !important;
  }
  #navigation-container {
    height: 100vh;
    top: 0;
  }
  #navigation-mask {
    display: none;
  }
}
#navigation-container {
  transition: transform 0.25s ease;
  background: white;
  z-index: 3;
}
#page-wrapper {
  margin-left: calc(-1 * var(--navigation-fullscreen-button-width));
}
@media screen and (max-width: 1139px) {
  #navigation-header-logo {
    display: none !important;
  }
  #navigation-wrapper {
    min-width: 0px !important;
    max-width: 0px !important;
  }
  #navigation-fullscreen-button {
    display: none;
  }
  #page-wrapper {
    margin-left: 0 !important;
  }
  #navigation-container {
    --width: min(100%, 350px);
    width: var(--width);
    left: 0;
    height: calc(100vh - var(--mobile-header-height));
    top: var(--mobile-header-height);
    padding-top: 20px;
    /* `position: sticky` doesn't seem to work on mobile */
    position: fixed;
  }
  body:not(.mobile-show-navigation) #navigation-container {
    transform: translateX(calc(-1 * var(--width)));
  }
  body:not(.mobile-show-navigation) #navigation-mask {
    display: none;
  }
  #mobile-header {
    display: inherit;
  }
  .doc-page h2 {
    --padding-top: calc(var(--mobile-header-height) + 12px) !important;
  }
}

html.navigation-fullscreen #navigation-container {
  width: 100%;
  height: 100vh;
  position: fixed;
  top: 0;
  left: 0;
  background-color: white;
}
html.navigation-fullscreen #navigation-header,
html.navigation-fullscreen #navigation-content-detached,
html.navigation-fullscreen #detached-note {
  display: none !important;
}
html.navigation-fullscreen .navigation-content {
  display: flex;
  margin: auto; /* A `max-width` is set by src/navigation/navigation-fullscreen/initNavigationFullscreen.ts */
}
html.navigation-fullscreen .navigation-content > .nav-column {
  flex-grow: 1;
  max-width: 350px;
}
html.navigation-fullscreen .nav-column > .nav-items-level-1-group:first-child > .nav-item-level-1:first-child {
  margin-top: 0px;
}
html.navigation-fullscreen {
  /* disable scroll of main view */
  overflow: hidden !important;
}
